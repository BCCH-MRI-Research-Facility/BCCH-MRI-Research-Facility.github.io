[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "BCCH MRI Research Facility Wiki Page",
    "section": "",
    "text": "Overview\nThis page serves as a Wiki and collection of resources for users of BC Children‚Äôs MRI Research Facility\nYou can search this page using the magnifying glass in the top right üîç\nOr you can navigate using the sidebar on the left üëà\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Orientation/instantmessaging.html",
    "href": "Orientation/instantmessaging.html",
    "title": "Instant Messaging / Stay in Touch",
    "section": "",
    "text": "Mattermost is an open-source alternative to Slack and Microsoft Teams. Similar to those programs, it is a tool for instant messaging and collaboration.\nIf you have MRI questions or want to connect with other BCCH MRI Research Facility users, you can use Mattermost to connect with us.\n\n\nIf you are on the BCCHR VPN, you can follow instructions from the BCCHR Hub here:\nhttps://hub.bcchr.ca/display/it/Mattermost\nOtherwise, you can follow these directions:\n\n\n\n[NOTE: You will need a BCCHR username and password to gain access.]\n\nFirst thing you will want to do is get invited to our ‚Äòteam‚Äô:\nClick here to be invited\nIf that link does not work, you can submit a request to IT via support.bcchr.ca\nYou will be asked ‚ÄúWhere would you like to view this?‚Äù For now, click ‚ÄúView in Browser‚Äù\nYou will be asked to login with your BCCHR username and password: \nAfter you are given access, refresh the login (i.e.¬†log out and log back in to https://im.bcchr.ca)\n\n\n\n\n\n\nAs described above, you can check out Mattermost on your browser first before you decide to install the app on your computer or phone:\nhttps://im.bcchr.ca/\n\n\n\nFor your computer, you will want to install Mattermost Desktop. Click here to choose your operating system and use their installation guide.\nFor server display name, use: BCCH Research MRI\nFor server URL, use: https://im.bcchr.ca/\nLogin with your BCCHR username and password\n\n\n\nMattermost can also be installed on your phone. Click here to choose your phone operating system.\nFor server display name, use: BCCH Research MRI\nFor server URL, use: https://im.bcchr.ca/\nLogin with your BCCHR username and password\n\n\n\n\n\n\nIf you want to learn more about Mattermost and its features, visit https://docs.mattermost.com/guides/user.html\n\n\n\nIt can be very helpful to others to include a photo or yourself.\n\nGo to Account Settings (Top right on Desktop app, and bottom right on Mobile app)\nClick on Your Profile\nEdit your Profile Picture",
    "crumbs": [
      "Home",
      "Orientation",
      "Instant Messaging / Stay in Touch"
    ]
  },
  {
    "objectID": "Orientation/instantmessaging.html#bcchr-it-instructions",
    "href": "Orientation/instantmessaging.html#bcchr-it-instructions",
    "title": "Instant Messaging / Stay in Touch",
    "section": "",
    "text": "If you are on the BCCHR VPN, you can follow instructions from the BCCHR Hub here:\nhttps://hub.bcchr.ca/display/it/Mattermost\nOtherwise, you can follow these directions:",
    "crumbs": [
      "Home",
      "Orientation",
      "Instant Messaging / Stay in Touch"
    ]
  },
  {
    "objectID": "Orientation/instantmessaging.html#setup",
    "href": "Orientation/instantmessaging.html#setup",
    "title": "Instant Messaging / Stay in Touch",
    "section": "",
    "text": "[NOTE: You will need a BCCHR username and password to gain access.]\n\nFirst thing you will want to do is get invited to our ‚Äòteam‚Äô:\nClick here to be invited\nIf that link does not work, you can submit a request to IT via support.bcchr.ca\nYou will be asked ‚ÄúWhere would you like to view this?‚Äù For now, click ‚ÄúView in Browser‚Äù\nYou will be asked to login with your BCCHR username and password: \nAfter you are given access, refresh the login (i.e.¬†log out and log back in to https://im.bcchr.ca)",
    "crumbs": [
      "Home",
      "Orientation",
      "Instant Messaging / Stay in Touch"
    ]
  },
  {
    "objectID": "Orientation/instantmessaging.html#installation",
    "href": "Orientation/instantmessaging.html#installation",
    "title": "Instant Messaging / Stay in Touch",
    "section": "",
    "text": "As described above, you can check out Mattermost on your browser first before you decide to install the app on your computer or phone:\nhttps://im.bcchr.ca/\n\n\n\nFor your computer, you will want to install Mattermost Desktop. Click here to choose your operating system and use their installation guide.\nFor server display name, use: BCCH Research MRI\nFor server URL, use: https://im.bcchr.ca/\nLogin with your BCCHR username and password\n\n\n\nMattermost can also be installed on your phone. Click here to choose your phone operating system.\nFor server display name, use: BCCH Research MRI\nFor server URL, use: https://im.bcchr.ca/\nLogin with your BCCHR username and password",
    "crumbs": [
      "Home",
      "Orientation",
      "Instant Messaging / Stay in Touch"
    ]
  },
  {
    "objectID": "Orientation/instantmessaging.html#next-steps",
    "href": "Orientation/instantmessaging.html#next-steps",
    "title": "Instant Messaging / Stay in Touch",
    "section": "",
    "text": "If you want to learn more about Mattermost and its features, visit https://docs.mattermost.com/guides/user.html\n\n\n\nIt can be very helpful to others to include a photo or yourself.\n\nGo to Account Settings (Top right on Desktop app, and bottom right on Mobile app)\nClick on Your Profile\nEdit your Profile Picture",
    "crumbs": [
      "Home",
      "Orientation",
      "Instant Messaging / Stay in Touch"
    ]
  },
  {
    "objectID": "tutorials/index.html",
    "href": "tutorials/index.html",
    "title": "Tutorials",
    "section": "",
    "text": "EEG-fMRI Ballistocardiogram Cleaning (Rodriguez method)\n\n\n\n\n\n\neeg-fmri\n\n\ncode\n\n\nmatlab\n\n\npreprocessing\n\n\neeg\n\n\n\nReversed engineered code from Rodriguez (2016) for removal of the ballistocardiogram artifacts from EEG-fMRI data when the ECG fails to give a good signal. This code requires Matlab and the Signal Processing Toolbox.\n\n\n\n\n\nJul 11, 2018\n\n\nLynne Williams\n\n\n\n\n\n\nNo matching items\n\n Back to top",
    "crumbs": [
      "Home",
      "Tutorials"
    ]
  },
  {
    "objectID": "tutorials/eeg-fmri/ballistocardiogram-removal.html",
    "href": "tutorials/eeg-fmri/ballistocardiogram-removal.html",
    "title": "EEG-fMRI Ballistocardiogram Cleaning (Rodriguez method)",
    "section": "",
    "text": "Reversed engineered code from Rodriguez (2016) for removal of the ballistocardiogram artifacts from EEG-fMRI data when the ECG fails to give a good signal. Cameron‚Äôs dissertation is included in this repository for transparency‚Äôs sake. This code requires Matlab and the Signal Processing Toolbox.\nIf you use this code, please cite:\nRodriguez, Cameron. (2016). Improvements to Simultaneous Electroencepalography-Functional Magnetic Resonance Imaging and Electroencepalographic Source Localization. PhD Thesis for the University of California, Los Angeles.",
    "crumbs": [
      "Home",
      "Tutorials",
      "Eeg Fmri",
      "EEG-fMRI Ballistocardiogram Cleaning (Rodriguez method)"
    ]
  },
  {
    "objectID": "tutorials/eeg-fmri/ballistocardiogram-removal.html#please-cite-rodriguez-2016",
    "href": "tutorials/eeg-fmri/ballistocardiogram-removal.html#please-cite-rodriguez-2016",
    "title": "EEG-fMRI Ballistocardiogram Cleaning (Rodriguez method)",
    "section": "",
    "text": "Reversed engineered code from Rodriguez (2016) for removal of the ballistocardiogram artifacts from EEG-fMRI data when the ECG fails to give a good signal. Cameron‚Äôs dissertation is included in this repository for transparency‚Äôs sake. This code requires Matlab and the Signal Processing Toolbox.\nIf you use this code, please cite:\nRodriguez, Cameron. (2016). Improvements to Simultaneous Electroencepalography-Functional Magnetic Resonance Imaging and Electroencepalographic Source Localization. PhD Thesis for the University of California, Los Angeles.",
    "crumbs": [
      "Home",
      "Tutorials",
      "Eeg Fmri",
      "EEG-fMRI Ballistocardiogram Cleaning (Rodriguez method)"
    ]
  },
  {
    "objectID": "tutorials/eeg-fmri/ballistocardiogram-removal.html#removing-the-ballistocardiogram-with-no-ecg",
    "href": "tutorials/eeg-fmri/ballistocardiogram-removal.html#removing-the-ballistocardiogram-with-no-ecg",
    "title": "EEG-fMRI Ballistocardiogram Cleaning (Rodriguez method)",
    "section": "Removing the Ballistocardiogram with no ECG",
    "text": "Removing the Ballistocardiogram with no ECG\n\nRemove the MR gradient signal from the EEG using your favourite software (here we used FIMRIB‚Äôs EEG tools [Niazy et al., 2005] in EEGLAB [Delorme & Makeig, 2004] saved as a .set file).\nSet up the paths to your data and change directories into the srcdir directory. Change the path to suit your dataset.\n\nsrcdir = fullfile('/Volumes', 'Lynne_32G', 'EEG', 'src');\ncd(scrdir)\n\nLoad the EEG run. Change to suit your dataset.\n\nEEG = load('-mat', [srcdir 'BHBMEG007_20210511_040344_GR.set']);\n\nGet the sampling rate. In the .set file, it is named srate and is an embedded structure of EEG. This may differ depending on the software used to remove the MR gradient noise.\n\nFs = EEG.srate\n\nRemove remaining gradient artifact at beginning and cut off part when net was removed at the end by cropping the signal.\nRestrict signal to channels included in Rodriguez 2016 for ballistocardiogram estimation (FT9 [EGI 67], TP9 [EGI 94], T7 [EGI 69], P7 [EGI 96], FT10 [EGI 219], TP10 [EGI 190], T8 [EGI 202], P8 [EGI 179]).\n\nchannels2keep = [67 94 69 96 219 190 202 179];\nstart = round(EEG.event(2).latency); % skip first TR as there is often gradient noise still in the signal  \ndata = double(EEG.data(channels2keep, start:end) );\n\nsubplot(8,1,1), plot(data(1,1:1500))\nsubplot(8,1,2), plot(data(2,1:1500))\nsubplot(8,1,3), plot(data(3,1:1500))\nsubplot(8,1,4), plot(data(4,1:1500))\nsubplot(8,1,5), plot(data(5,1:1500))\nsubplot(8,1,6), plot(data(6,1:1500))\nsubplot(8,1,7), plot(data(7,1:1500))\nsubplot(8,1,8), plot(data(8,1:1500))\n\n\n\nChannels to derive cardiac signal from.\n\n\n\nSubtract mean from each channel.\n\ndata = data - mean(data,2)\n\nCreate mean left and right channels\n\nLmean = mean(data(1:4,:));\nRmean = mean(data(5:8,:));\n\nRereference channels\n\nTake the difference of Lmean and Rmean\n\n\nLR = Lmean - Rmean;\nplot(LR(35000:40000))\n\n\n\nRereferenced channels.\n\n\n\nClean up output Step 10.1: LR mean Signal Conditioning/Filtering\n\n\nFilter series 1: Low Bandwidth\n\n0.75 Hz 6th order Butterworth filter\n10 Hz 12th order Butterworth filter\n\n\n% Generate filters\nLBW.highpass = designfilt('highpassiir', 'FilterOrder', 6, ...\n    'HalfPowerFrequency', 0.75, 'SampleRate', Fs)\n\nLBW.lowpass = designfilt('lowpassiir', 'FilterOrder', 12, ...\n    'HalfPowerFrequency', 10, 'SampleRate', Fs)\n\n% Filter Lmean\ntemp = filtfilt(LBW.highpass, Lmean);\nLmean_LBW = filtfilt(LBW.lowpass, temp);\n\n% Filter Rmean\ntemp = filtfilt(LBW.highpass, Rmean);\nRmean_LBW = filtfilt(LBW.lowpass, temp);\n\n% Filter again (only with the difference this time)\ntemp = filtfilt(LBW.highpass, (Lmean_LBW - Rmean_LBW));\nLR_LBW = filtfilt(LBW.lowpass, temp);\n\nFilter series 2: High Bandwidth\n\n0.75 Hz 6th order Butterworth filter\n50 Hz 12th order Butterworth filter\n\n\n% Generate filters\nHBW.highpass = designfilt('highpassiir', 'FilterOrder', 6, ...\n    'HalfPowerFrequency', 0.75, 'SampleRate', Fs)\n\nHBW.lowpass = designfilt('lowpassiir', 'FilterOrder', 12, ...\n    'HalfPowerFrequency', 50, 'SampleRate', Fs)\n\n% Filter Lmean\ntemp = filtfilt(HBW.highpass, Lmean);\nLmean_HBW = filtfilt(HBW.lowpass, temp);\n\n% Filter Rmean\ntemp = filtfilt(HBW.highpass, Rmean);\nRmean_HBW = filtfilt(HBW.lowpass, temp);\n\n% Filter again (only with the difference this time)\ntemp = filtfilt(HBW.highpass, (Lmean_HBW - Rmean_HBW));\nLR_HBW = filtfilt(HBW.lowpass, temp);\n\nNormalize Low Bandwidth Signal\n\nFirst take the first drivative\n\n\n\\[ x'[n] = \\frac{d}{dn}x[n], \\] where \\(x[n]\\) is the time domain representation of the LR mean signal\nLR_LBW_diff = diff(LR_LBW)/(Fs);\nThen normalize the difference representation\n\\[ x'[n] = \\frac{x'[n]}{\\text{max}\\|x'[n]\\|}\\]\nLR_LBW_norm = LR_LBW_diff./max(abs(LR_LBW_diff));\n\nGet the positive Shannon Energy envelope:\n\n\\[SEE[n] = -\\bigg( \\big&lt; ( &lt; x'_N[n], x'*_N[n] &gt; ), log( &lt; x'[n], x'*_N[n] &gt; ) \\big&gt; \\bigg)\\]\nwhen \\(x'*_N\\) is the complex conjugate. However, in most cases, this simplifies into real numbers as\n\\[SEE[n] = \\big&lt; x'[n]^2,\\ln(x'_N[n]^2)\\big&gt;\\]\nLR_LBW_SEE = -((LR_LBW_norm.^2).*log(LR_LBW_norm.^2));\nplot(LR_LBW_SEE(1:5000))\n\n\n\nShannon Entropy Envelope\n\n\nStep 10.2 : LR mean Peak Detection Round 1 ‚Äì SEE\n\nFind peak SEE (Assumption of maximum of 120 beats per minute supine heart rate.)\n\nbeatspermin = 120;\nprominence_factor = 0.1;\n%[pks, locs] =  findpeaks (LR_LBW_SEE, ...\n%    'MinPeakProminence', prominence_factor, ... \n%    'MinPeakDistance', (Fs/(beatspermin/60)));\n[pks, locs] =  findpeaks (LR_LBW_SEE, ...\n    'MinPeakDistance', (Fs/(beatspermin/60)));\n\nFind local minima and maxima for each peak\n\nrange2plot = 1:5000;\nt = 1:length(LR_LBW_SEE);\n\nsubplot(2,1,1)\nplot(t(range2plot), LR_LBW_SEE(range2plot))\nlocs_small = locs(and(locs &lt;= max(range2plot), locs &gt;= min(range2plot)));\nhold on\nplot(t(locs_small), pks(and(locs &lt;= max(range2plot), locs &gt;= min(range2plot))),  'r*')\nhold off\n\n\n\nPeak Shannon Entropy\n\n\n\nGet local minima and maxima for SEE peaks\n\nTolerance of \\(\\pm200\\) ms (don‚Äôt know if this is too much ‚Äì QRS complex takes .2 seconds (~200 ms))\ntol = 200; \n\nfor idx = 1:length(locs)\n    minloc = locs(idx) - tol;\n    if minloc &lt; 1\n        minloc = 1;\n    end\n    maxloc = locs(idx) + tol;\n    if maxloc &gt; length(LR_LBW_SEE)\n        maxloc = length(LR_LBW_SEE);\n    end\n    \n    [tmp, loc_tmp] = findpeaks(-LR_LBW(minloc:maxloc));\n    tmp = -tmp;\n    if length(tmp) &gt;= 1\n        minima.value(idx) = tmp(1);\n    else\n        minima.value(idx) = LR_LBW(locs(idx));\n    end\n    minima.loc(idx) = minloc + find(LR_LBW(minloc:maxloc) == minima.value(idx)) - 1;\n    \n    [tmp, loc_tmp] = findpeaks(LR_LBW(minloc:maxloc));\n    if isempty(tmp)\n        tmp = 0;\n    end\n    if length(tmp) &gt; 1\n        maxima.value(idx) = tmp(2);\n    elseif tmp == 0\n        maxima.value(idx) = max(LR_LBW(minloc:maxloc));\n    else\n        maxima.value(idx) = tmp(1);\n    end\n    maxima.loc(idx) = minloc + find(LR_LBW(minloc:maxloc) == maxima.value(idx)) - 1;\nend\n\nCompare values with average across all sets and flag all sets with at least one value greater than 1.5 standard deviations from mean.\n\nFirst the amplitude\n\n\nthreshstd = 1.5;\n\nmaxima.mean.value = mean(maxima.value);\nmaxima.std.value = std(maxima.value);\n\nmaxima2throw = or(maxima.value &gt;= maxima.mean.value + (threshstd*maxima.std.value), maxima.value &lt;= maxima.mean.value - (threshstd*maxima.std.value));\n\nminima.mean.value = mean(minima.value);\nminima.std.value = std(minima.value);\n\nminima2throw = or(minima.value &gt;= minima.mean.value + (threshstd*minima.std.value), minima.value &lt;= minima.mean.value - (threshstd*minima.std.value));\n- Then the temporal distance from SEE peak\nmaxima.dist.value = abs(locs - maxima.loc);\nmaxima.dist.mean = mean(maxima.dist.value);\nmaxima.dist.std = std(maxima.dist.value);\n\nmaximadist2throw = or(maxima.dist.value &gt;= maxima.dist.mean + (threshstd*maxima.dist.std), maxima.dist.value &lt;= maxima.dist.mean - (threshstd*maxima.dist.std));\n\nminima.dist.value = abs(locs - minima.loc);\nminima.dist.mean = mean(minima.dist.value);\nminima.dist.std = std(minima.dist.value);\n\nminimadist2throw = or(minima.dist.value &gt;= minima.dist.mean + (threshstd*minima.dist.std), minima.dist.value &lt;= minima.dist.mean - (threshstd*minima.dist.std));\n- And now temporal distance between minma and maxima\nmaximaminima.dist.value = abs(maxima.loc - minima.loc);\nmaximaminima.dist.mean = mean(maximaminima.dist.value);\nmaximaminima.dist.std = std(maximaminima.dist.value);\n\nmaximaminimadist2throw = or(maximaminima.dist.value &gt;= maximaminima.dist.mean + (threshstd*maximaminima.dist.std), maximaminima.dist.value &lt;= maximaminima.dist.mean - (threshstd*maximaminima.dist.std));\n- Now discard any peaks locations that are outside 1.5 standard deviations from the mean\npeaks2throw = (maxima2throw + maximadist2throw + maximaminimadist2throw + minima2throw + minimadist2throw &gt; 0);\n\nmaxima.thresh.value = maxima.value(~peaks2throw);\nmaxima.thresh.loc = maxima.loc(~peaks2throw);\nminima.thresh.value = minima.value(~peaks2throw);\nminima.thresh.loc = minima.loc(~peaks2throw);\n\n% Now plot them\nplot(t(range2plot), LR_LBW(range2plot))\nhold on\nlocs_small = locs(and(locs &lt;= max(range2plot), locs &gt;= min(range2plot)));\nplot(t(locs_small), LR_LBW(and(locs &lt;= max(range2plot), locs &gt;= min(range2plot))),  'r*');\nplot(t(maxima.thresh.loc(and(maxima.thresh.loc &lt;= max(range2plot), maxima.thresh.loc &gt;= min(range2plot)))), maxima.thresh.value(and(maxima.thresh.loc &lt;= max(range2plot), maxima.thresh.loc &gt;= min(range2plot))),  'g*')\nplot(t(minima.thresh.loc(and(minima.thresh.loc &lt;= max(range2plot), minima.thresh.loc &gt;= min(range2plot)))), minima.thresh.value(and(minima.thresh.loc &lt;= max(range2plot), minima.thresh.loc &gt;= min(range2plot))),  'b*')\nhold off\n\n\n\nPeak distances.\n\n\n% clear all figures\nclf\n- Remove any between peak distances with an interbeat interval greater than 1.5 seconds (~40 beats per min) and less than 0.5 seconds (~120 beats per minute).\nIBI.value = diff(minima.thresh.loc);\nIBI.thresh1 = 1.5*Fs;\nIBI.thresh2 = 0.5*Fs;\n\nIBI2keep = and(IBI.value &lt; IBI.thresh1, IBI.value &gt; IBI.thresh2);\n- From the remaining IBI, take the maximum of the mean IBI minus 2 standard deviations or 0.5 seconds. This is the window for creating the ballistocardiogram template.\nIBI.thresh.value = IBI.value(IBI2keep);\nIBI.thresh.mean = mean(IBI.thresh.value);\nIBI.thresh.std = std(IBI.thresh.value);\n\nIBIwindow = round(max(0.5*Fs, IBI.thresh.mean - (2*IBI.thresh.std)));\n- Compute average LR_LBW of IBIwindow size (like 'ERPs') centered on max peak\nIBI2keep4minima = logical([IBI2keep 0]);\nminima.thresh.valueIBI = minima.thresh.value(IBI2keep4minima);\nminima.thresh.locIBI = minima.thresh.loc(IBI2keep4minima);\n\nif mod(IBIwindow,2) ~= 0\n    IBIwindow = IBIwindow - 1;\nend\n\n\ncount = 1;\nfor i = 1:length(minima.thresh.locIBI)\n    minloc = minima.thresh.locIBI(i) - IBIwindow/2;\n    maxloc = minima.thresh.locIBI(i) + IBIwindow/2;\n    if minloc &lt; 1 | maxloc &gt; minima.thresh.locIBI(end) - IBIwindow/2;\n        continue\n    end\n    template.matrix(count,:) = LR_LBW(minloc:maxloc);\n    count=count+1;\nend\n\ntemplate.mean = mean(template.matrix);\ntemplate.std = std(template.matrix);\n- Compute BCG window.\n\nAdd path to the bounded line package. The bounded line package can be downloaded from [here](https://github.com/kakearney/boundedline-pkg/). Change path to fit your data. \naddpath('~/Documents/MATLAB/kakearney-boundedline-pkg-8179f9a/boundedline/')\naddpath('~/Documents/MATLAB/kakearney-boundedline-pkg-8179f9a/catuneven/')\naddpath('~/Documents/MATLAB/kakearney-boundedline-pkg-8179f9a/Inpaint_nans/')\naddpath('~/Documents/MATLAB/kakearney-boundedline-pkg-8179f9a/readmeExtras/')\naddpath('~/Documents/MATLAB/kakearney-boundedline-pkg-8179f9a/singlepatch/')\nboundedline(1-IBIwindow/2:1+IBIwindow/2, template.mean, template.std, 1-IBIwindow/2:1+IBIwindow/2, repmat(0, 1, length(template.std)), 0, 'r-')\n\nuthr = template.mean + template.std;\nlthr = template.mean - template.std;    \n\n\ncentre = IBIwindow/2+1;\n\ncutoff = find(uthr &lt; 0);\n\nmindistance = max(cutoff) - min(cutoff);\n\nGet cross correlations for each time window lag in data\n\nlngX = length(LR_LBW);\nlngY = length(template.mean);\nassert(lngX &gt;= lngY);\nlags = 0:(lngX-lngY);\nfor i = lags\n   c(i+1) = xcorr(LR_LBW(i+1:i+lngY) - mean(LR_LBW(i+1:i+lngY)), template.mean - mean(template.mean),0,'coeff');\nend\n\nclf\nplot(lags(range2plot),c(range2plot));\nxlabel('lags'); title('normalized cross-correlation');\n\n\n\nNormalized Cross Correlation\n\n\n[pks2, loc2] = findpeaks(c, 'MinPeakDistance', mindistance);\n\nqpkloc = loc2 + (maxima.thresh.loc(1) - loc2(1));\n\nplot(LR_LBW(1:5000))\nhold on\nplot(qpkloc(and(qpkloc &lt;= max(1:5000), qpkloc &gt;= min(1:5000))), LR_LBW(qpkloc(and(qpkloc &lt;= max(1:5000), qpkloc &gt;= min(1:5000)))), 'r*')\nhold off\n\n\nCross correlation error checking\n\nmeanIBI = movmean(diff(qpkloc),4) - mean(diff(qpkloc)); % center the data \ndeviationIBI = diff(qpkloc) - mean(diff(qpkloc));\n\nclf\nboundedline(1:length(meanIBI), meanIBI, 100, 'r-', 1:length(meanIBI), deviationIBI, 0, 'b-')\n\nFind the deviations greater than and less than a 100 ms (0.1 second) window around moving average\nqpkloc_new = qpkloc;\n\ndeviationIBIlocs = find(deviationIBI &gt; meanIBI + 100 | deviationIBI &lt; meanIBI - 100);\nif ~isempty(deviationIBIlocs)\n    disp('There are deviations outside threshold');\n    if length(deviationIBIlocs) &gt;= 1\n        bipolar = find(diff(deviationIBIlocs) == 1);\n        if ~isempty(bipolar)\n           for pk = 1:length(bipolar)\n                   [tmp3, loc3]  =  findpeaks(c(qpkloc(deviationIBIlocs(pk))-100:qpkloc(deviationIBIlocs(pk))+100));\n               if isempty(tmp3)\n                   continue\n               else\n                   [m,idx] = max(tmp3);\n                   qpkloc_new(deviationIBIlocs(pk)) = qpkloc(deviationIBIlocs(pk)) - 100 + loc3(idx);   \n                   % Done 2018/12/11 -- TODO: SHIFT PEAK POINT IN qpkloc to largest local peak in cross correlation signal\n               end\n           end\n        end\n    end\nend\n\nApply timing to larger bandwidth\n\n[HBWpks, HBWlocs] = findpeaks(LR_HBW, 'MinPeakDistance', mindistance);\ntemp = ismembertol(HBWlocs, qpkloc, 20, 'DataScale', 2); % put 0.01 second tolerance on match (although Rodriguez's dissertation doesn't specify what is meant by 'near') &lt;-- this is obviously wrong as it takes a vector of 900 and reduces it to 37. Still need to figure this one out.\nSPpeaks = HBWlocs; % HBWlocs(temp);\n\nplot(1:length(LR_HBW(range2plot)), LR_HBW(range2plot), SPpeaks(ismember(SPpeaks, range2plot)), LR_HBW(SPpeaks(ismember(SPpeaks, range2plot))), 'r*')\n\n\nSave to text file that needs minimal modifcations to be imported into EEGLAB\n\nT = table([SPpeaks' + start - 1], [repmat('sppeak', length(SPpeaks), 1)], ...\n    'VariableNames', {'latency', 'type'});\nwritetable(T,[srcdir nom],'Delimiter','\\t')\n\nDo qrs cleaning in EEGLAB using the FIMRIB tools.",
    "crumbs": [
      "Home",
      "Tutorials",
      "Eeg Fmri",
      "EEG-fMRI Ballistocardiogram Cleaning (Rodriguez method)"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "The BC Children‚Äôs Hospital MRI Research Facility is one of Canada‚Äôs top centres for pediatric brain mapping and imaging sciences research.\nA core facility of the BC Children‚Äôs Hospital‚Äôs Research Institute and affiliated with the University of British Columbia, the child-friendly environment of the MRI Research Facility is ideally situated to optimize opportunities for widespread research collaborations with the highly skilled staff found at BC Children‚Äôs Hospital and BC Women‚Äôs Hospital + Health Centre.\nThe MRI Research Facility features a GE Discovery MR750 3.0 Tesla MRI scanner for functional MRI, structural MRI and spectroscopy. The current scanner software version is DV26.0_R03.\nTogether, with our child-friendly MRI simulator, the MRI Research Facility provides an excellent platform for performing research studies on babies and young children.\n\n\n\n Back to top",
    "crumbs": [
      "Home",
      "About"
    ]
  },
  {
    "objectID": "Orientation/index.html",
    "href": "Orientation/index.html",
    "title": "Orientation",
    "section": "",
    "text": "Back to top",
    "crumbs": [
      "Home",
      "Orientation"
    ]
  }
]